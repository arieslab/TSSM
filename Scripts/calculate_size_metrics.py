# Import libraries
import pandas as pd
from re import search
import numpy as np

# Get the metrics for each project
def getTest(pathInput,name):
    try:
        # Filter to get only classes, i.e., we do not analyze inner and enum classes
        fileMethod = pd.read_csv(pathInput+name+"_class.csv")
        # Filter type class
        #fileMethod = fileMethod.iloc[np.where(fileMethod1.type == "class")]
        fileMethod['file'] = fileMethod['file'].apply(lambda x: x.rpartition("/")[-1])


        # Regular expression to find the test classes and production classes
        onlyTest = fileMethod[fileMethod.file.str.contains("^Test|^test|Test.java$|test.java$|Tests.java$|tests.java$")]
        onlyClass = fileMethod[~fileMethod.file.str.contains("^Test|^test|Test.java$|test.java$|Tests.java$|tests.java$")]

        # Metrics
        numTestClasses = len(onlyTest)
        numProductionClasses = len(onlyClass)
        numTestMethods = onlyTest['totalMethodsQty'].sum()
        numProductionMethods = onlyClass['totalMethodsQty'].sum()

        numTestLines = onlyTest['loc'].sum()
        numClassLines = onlyClass['loc'].sum()

        print(f'{name}, {numTestClasses}, {numProductionClasses}, {numTestMethods}, {numProductionMethods}, {numTestLines}, {numClassLines}')
    except pd.errors.EmptyDataError:
        print('Empty data')
    except pd.errors.ParserError:
        print('Parser Error')

# Read the csv file generated by CK metrics
def Read(fileName):
    fileObj = open(fileName, "r")
    words = fileObj.read().splitlines()
    fileObj.close()
    names = []
    for i in words:
        names.append(i.replace("/", "_"))
    return names

# Loop over the projects' name to search their correspondent csv path and calculate the metrics for each project
# The results are merged into "projects.csv"
def main():
    path = "/media/luana-martins/4805f023-fc6f-4893-b3f8-5f9f2d37cf70/home/luana-martins/Documentos/JSEP/"
    pathInput = path+"files/"
    pathProjectsList = path+"all.txt"

    # Read the txt with all projects' names
    projects = Read(pathProjectsList)

    # Run the list of projects' name and get their metrics
    for name in projects:
        try:
            testClasses = getTest(pathInput, name)
        except ValueError:
            print("Please enter a valid input.")

main()
